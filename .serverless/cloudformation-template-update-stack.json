{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "DetectLabelsLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/emi-lambda-recko-dev-detectLabels"
      }
    },
    "DetectFacesLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/emi-lambda-recko-dev-detectFaces"
      }
    },
    "DetectTextLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/emi-lambda-recko-dev-detectText"
      }
    },
    "DetectPPELogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/emi-lambda-recko-dev-detectPPE"
      }
    },
    "FindLabelLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/emi-lambda-recko-dev-findLabel"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "emi-lambda-recko",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/emi-lambda-recko-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/emi-lambda-recko-dev*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:ListBucket",
                    "s3:GetObject",
                    "s3:DeleteObject"
                  ],
                  "Resource": "arn:aws:s3:::nx-frame-test/*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "rekognition:DetectText",
                    "rekognition:DetectLabel",
                    "rekognition:DetectFace",
                    "rekognition:DetectProtectiveEquipment"
                  ],
                  "Resource": [
                    "*"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:PutItem",
                    "dynamodb:GetItem",
                    "dynamodb:DeleteItem",
                    "dynamodb:Scan"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "ProductsTable",
                        "Arn"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "emi-lambda-recko",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "DetectLabelsLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/emi-lambda-recko/dev/1667743950423-2022-11-06T14:12:30.423Z/emi-lambda-recko.zip"
        },
        "Handler": ".build/src/handler.detectLabels",
        "Runtime": "nodejs14.x",
        "FunctionName": "emi-lambda-recko-dev-detectLabels",
        "MemorySize": 1024,
        "Timeout": 6,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "DetectLabelsLogGroup"
      ]
    },
    "DetectFacesLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/emi-lambda-recko/dev/1667743950423-2022-11-06T14:12:30.423Z/emi-lambda-recko.zip"
        },
        "Handler": ".build/src/handler.detectFaces",
        "Runtime": "nodejs14.x",
        "FunctionName": "emi-lambda-recko-dev-detectFaces",
        "MemorySize": 1024,
        "Timeout": 6,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "DetectFacesLogGroup"
      ]
    },
    "DetectTextLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/emi-lambda-recko/dev/1667743950423-2022-11-06T14:12:30.423Z/emi-lambda-recko.zip"
        },
        "Handler": ".build/src/handler.detectText",
        "Runtime": "nodejs14.x",
        "FunctionName": "emi-lambda-recko-dev-detectText",
        "MemorySize": 1024,
        "Timeout": 6,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "DetectTextLogGroup"
      ]
    },
    "DetectPPELambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/emi-lambda-recko/dev/1667743950423-2022-11-06T14:12:30.423Z/emi-lambda-recko.zip"
        },
        "Handler": ".build/src/handler.detectPPE",
        "Runtime": "nodejs14.x",
        "FunctionName": "emi-lambda-recko-dev-detectPPE",
        "MemorySize": 1024,
        "Timeout": 6,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "DetectPPELogGroup"
      ]
    },
    "FindLabelLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/emi-lambda-recko/dev/1667743950423-2022-11-06T14:12:30.423Z/emi-lambda-recko.zip"
        },
        "Handler": ".build/src/handler.getLabel",
        "Runtime": "nodejs14.x",
        "FunctionName": "emi-lambda-recko-dev-findLabel",
        "MemorySize": 1024,
        "Timeout": 6,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "FindLabelLogGroup"
      ]
    },
    "DetectLabelsLambdaVersionj9ux1wraxoV6GXHFw0XSD7ibjLBolsyYmgNDHOmXSQ": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "DetectLabelsLambdaFunction"
        },
        "CodeSha256": "sFzD4H+zT03kM0nyEdj6nkFwQtVmi5+WuFNczVdcsjQ="
      }
    },
    "DetectFacesLambdaVersionXm6iGGwBq9hgHy9FHnZJd5A0qAfPtQXGtM8FDUd5T0": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "DetectFacesLambdaFunction"
        },
        "CodeSha256": "sFzD4H+zT03kM0nyEdj6nkFwQtVmi5+WuFNczVdcsjQ="
      }
    },
    "DetectTextLambdaVersion8AjsylQFqj8pnaryKMtQqsL8EDsZA3OkwTXRU38zdE": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "DetectTextLambdaFunction"
        },
        "CodeSha256": "sFzD4H+zT03kM0nyEdj6nkFwQtVmi5+WuFNczVdcsjQ="
      }
    },
    "DetectPPELambdaVersionOTz97pX1vjrBTXaHEycT7CR3eKeeozHlQlJdPRK4SqI": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "DetectPPELambdaFunction"
        },
        "CodeSha256": "sFzD4H+zT03kM0nyEdj6nkFwQtVmi5+WuFNczVdcsjQ="
      }
    },
    "FindLabelLambdaVersionjlrQECvk345rlmdGb5NFm2Gm0uMDe8GKBI1U5kmUM0": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "FindLabelLambdaFunction"
        },
        "CodeSha256": "sFzD4H+zT03kM0nyEdj6nkFwQtVmi5+WuFNczVdcsjQ="
      }
    },
    "HttpApi": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": "dev-emi-lambda-recko",
        "ProtocolType": "HTTP"
      }
    },
    "HttpApiStage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "StageName": "$default",
        "AutoDeploy": true,
        "DefaultRouteSettings": {
          "DetailedMetricsEnabled": false
        }
      }
    },
    "DetectLabelsLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "DetectLabelsLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationDetectLabels": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "DetectLabelsLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0"
      }
    },
    "HttpApiRoutePostDetectlabel": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "POST /detectlabel",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationDetectLabels"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationDetectLabels"
    },
    "DetectFacesLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "DetectFacesLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationDetectFaces": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "DetectFacesLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0"
      }
    },
    "HttpApiRoutePostDetectface": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "POST /detectFace",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationDetectFaces"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationDetectFaces"
    },
    "DetectTextLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "DetectTextLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationDetectText": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "DetectTextLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0"
      }
    },
    "HttpApiRoutePostDetecttext": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "POST /detectText",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationDetectText"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationDetectText"
    },
    "DetectPPELambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "DetectPPELambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationDetectPPE": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "DetectPPELambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0"
      }
    },
    "HttpApiRoutePostDetectppe": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "POST /detectPPE",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationDetectPPE"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationDetectPPE"
    },
    "FindLabelLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "FindLabelLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationFindLabel": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "FindLabelLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0"
      }
    },
    "HttpApiRouteGetGetlabelNameVar": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "GET /getlabel/{name}",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationFindLabel"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationFindLabel"
    },
    "ProductsTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "ProductsTable",
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1
        },
        "AttributeDefinitions": [
          {
            "AttributeName": "productID",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "productID",
            "KeyType": "HASH"
          }
        ]
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-emi-lambda-recko-dev-ServerlessDeploymentBucketName"
      }
    },
    "DetectLabelsLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "DetectLabelsLambdaVersionj9ux1wraxoV6GXHFw0XSD7ibjLBolsyYmgNDHOmXSQ"
      },
      "Export": {
        "Name": "sls-emi-lambda-recko-dev-DetectLabelsLambdaFunctionQualifiedArn"
      }
    },
    "DetectFacesLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "DetectFacesLambdaVersionXm6iGGwBq9hgHy9FHnZJd5A0qAfPtQXGtM8FDUd5T0"
      },
      "Export": {
        "Name": "sls-emi-lambda-recko-dev-DetectFacesLambdaFunctionQualifiedArn"
      }
    },
    "DetectTextLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "DetectTextLambdaVersion8AjsylQFqj8pnaryKMtQqsL8EDsZA3OkwTXRU38zdE"
      },
      "Export": {
        "Name": "sls-emi-lambda-recko-dev-DetectTextLambdaFunctionQualifiedArn"
      }
    },
    "DetectPPELambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "DetectPPELambdaVersionOTz97pX1vjrBTXaHEycT7CR3eKeeozHlQlJdPRK4SqI"
      },
      "Export": {
        "Name": "sls-emi-lambda-recko-dev-DetectPPELambdaFunctionQualifiedArn"
      }
    },
    "FindLabelLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "FindLabelLambdaVersionjlrQECvk345rlmdGb5NFm2Gm0uMDe8GKBI1U5kmUM0"
      },
      "Export": {
        "Name": "sls-emi-lambda-recko-dev-FindLabelLambdaFunctionQualifiedArn"
      }
    },
    "HttpApiId": {
      "Description": "Id of the HTTP API",
      "Value": {
        "Ref": "HttpApi"
      },
      "Export": {
        "Name": "sls-emi-lambda-recko-dev-HttpApiId"
      }
    },
    "HttpApiUrl": {
      "Description": "URL of the HTTP API",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "HttpApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            }
          ]
        ]
      },
      "Export": {
        "Name": "sls-emi-lambda-recko-dev-HttpApiUrl"
      }
    }
  }
}