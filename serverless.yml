
service: emi-lambda-recko
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs14.x

  region: eu-west-2

  iam:
    role:
      statements:
      - Effect: Allow
        Action: 
          - s3:ListBucket
          - s3:GetObject
          - s3:DeleteObject
          # - s3:GetBucketPolicy # added ?
          # - s3:PutBucketPolicy # added ?
        #Resource: arn:aws:s3:::nx-frame-test1/* #emi aws 
        Resource: arn:aws:s3:::nx-frame-test/*
      - Effect: Allow
        Action: 
          - rekognition:DetectText
          - rekognition:DetectLabel
          - rekognition:DetectFace
          - rekognition:DetectProtectiveEquipment
        Resource:
          - '*'
      - Effect: Allow
        Action: 
          - "dynamodb:PutItem"
          - "dynamodb:GetItem"
          - "dynamodb:DeleteItem"
          - "dynamodb:Scan"
        Resource:
          - { "Fn::GetAtt": ["ProductsTable", "Arn"] }

functions:
  detectLabels:
    handler: .build/src/handler.detectLabels
    events:
      - httpApi: 
          path: /detectlabel
          method: post

  detectFaces:
    handler: .build/src/handler.detectFaces
    events:
      - httpApi: 
          path: /detectFace
          method: post

  detectText:
    handler: .build/src/handler.detectText
    events:
      - httpApi: 
          path: /detectText
          method: post

  detectPPE:
    handler: .build/src/handler.detectPPE
    events:
    - httpApi: 
        path: /detectPPE
        method: post

  findLabel:
    handler: .build/src/handler.getLabel
    events: 
      - httpApi: 
          path: /getlabel/{name}
          method: get

resources:
  Resources:
    ProductsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ProductsTable
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        AttributeDefinitions:
          - AttributeName: productID
            AttributeType: S
        KeySchema:
          - AttributeName: productID
            KeyType: HASH



